/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core/index.js";
import { mergeHeaders } from "./core/headers.js";
import { Export } from "./api/resources/export/client/Client.js";
import { Dex } from "./api/resources/dex/client/Client.js";
import { Jetton } from "./api/resources/jetton/client/Client.js";
import { Stats } from "./api/resources/stats/client/Client.js";
import { Wallets } from "./api/resources/wallets/client/Client.js";

export declare namespace StonfiClient {
    export interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class StonfiClient {
    protected readonly _options: StonfiClient.Options;
    protected _export: Export | undefined;
    protected _dex: Dex | undefined;
    protected _jetton: Jetton | undefined;
    protected _stats: Stats | undefined;
    protected _wallets: Wallets | undefined;

    constructor(_options: StonfiClient.Options) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "stonfi",
                    "X-Fern-SDK-Version": "0.0.1",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
    }

    public get export(): Export {
        return (this._export ??= new Export(this._options));
    }

    public get dex(): Dex {
        return (this._dex ??= new Dex(this._options));
    }

    public get jetton(): Jetton {
        return (this._jetton ??= new Jetton(this._options));
    }

    public get stats(): Stats {
        return (this._stats ??= new Stats(this._options));
    }

    public get wallets(): Wallets {
        return (this._wallets ??= new Wallets(this._options));
    }
}
